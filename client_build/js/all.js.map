{"version":3,"sources":["common.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["// Drawing SVG\n(function() {\n\n\t'use strict';\n\n\tvar docElem = window.document.documentElement;\n\n\twindow.requestAnimFrame = function(){\n\t\treturn (\n\t\t\twindow.requestAnimationFrame       || \n\t\t\twindow.webkitRequestAnimationFrame || \n\t\t\twindow.mozRequestAnimationFrame    || \n\t\t\twindow.oRequestAnimationFrame      || \n\t\t\twindow.msRequestAnimationFrame     || \n\t\t\tfunction(/* function */ callback){\n\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t}\n\t\t);\n\t}();\n\n\twindow.cancelAnimFrame = function(){\n\t\treturn (\n\t\t\twindow.cancelAnimationFrame       || \n\t\t\twindow.webkitCancelAnimationFrame || \n\t\t\twindow.mozCancelAnimationFrame    || \n\t\t\twindow.oCancelAnimationFrame      || \n\t\t\twindow.msCancelAnimationFrame     || \n\t\t\tfunction(id){\n\t\t\t\twindow.clearTimeout(id);\n\t\t\t}\n\t\t);\n\t}();\n\n\tfunction SVGEl( el ) {\n\t\tthis.el = el;\n\t\tthis.image = this.el.previousElementSibling;\n\t\tthis.current_frame = 0;\n\t\tthis.total_frames = 60;\n\t\tthis.path = new Array();\n\t\tthis.length = new Array();\n\t\tthis.handle = 0;\n\t\tthis.init();\n\t}\n\n\tSVGEl.prototype.init = function() {\n\t\tvar self = this;\n\t\t[].slice.call( this.el.querySelectorAll( 'path' ) ).forEach( function( path, i ) {\n\t\t\tself.path[i] = path;\n\t\t\tvar l = self.path[i].getTotalLength();\n\t\t\tself.length[i] = l;\n\t\t\tself.path[i].style.strokeDasharray = l + ' ' + l; \n\t\t\tself.path[i].style.strokeDashoffset = l;\n\t\t} );\n\t};\n\n\tSVGEl.prototype.render = function() {\n\t\tif( this.rendered ) return;\n\t\tthis.rendered = true;\n\t\tthis.draw();\n\t};\n\n\tSVGEl.prototype.draw = function() {\n\t\tvar self = this,\n\t\t\tprogress = this.current_frame/this.total_frames;\n\t\tif (progress > 1) {\n\t\t\twindow.cancelAnimFrame(this.handle);\n\t\t\tthis.showImage();\n\t\t} else {\n\t\t\tthis.current_frame++;\n\t\t\tfor(var j=0, len = this.path.length; j<len;j++){\n\t\t\t\tthis.path[j].style.strokeDashoffset = Math.floor(this.length[j] * (1 - progress));\n\t\t\t}\n\t\t\tthis.handle = window.requestAnimFrame(function() { self.draw(); });\n\t\t}\n\t};\n\n\tSVGEl.prototype.showImage = function() {\n\t\tclassie.add( this.image, 'show' );\n\t\tclassie.add( this.el, 'hide' );\n\t};\n\n\tfunction getViewportH() {\n\t\tvar client = docElem['clientHeight'],\n\t\t\tinner = window['innerHeight'];\n\t\t \n\t\tif( client < inner )\n\t\t\treturn inner;\n\t\telse\n\t\t\treturn client;\n\t}\n \n\tfunction scrollY() {\n\t\treturn window.pageYOffset || docElem.scrollTop;\n\t}\n \n\t// http://stackoverflow.com/a/5598797/989439\n\tfunction getOffset( el ) {\n\t\tvar offsetTop = 0, offsetLeft = 0;\n\t\tdo {\n\t\t\tif ( !isNaN( el.offsetTop ) ) {\n\t\t\t\toffsetTop += el.offsetTop;\n\t\t\t}\n\t\t\tif ( !isNaN( el.offsetLeft ) ) {\n\t\t\t\toffsetLeft += el.offsetLeft;\n\t\t\t}\n\t\t} while( el = el.offsetParent )\n \n\t\treturn {\n\t\t\ttop : offsetTop,\n\t\t\tleft : offsetLeft\n\t\t};\n\t}\n \n\tfunction inViewport( el, h ) {\n\t\tvar elH = el.offsetHeight,\n\t\t\tscrolled = scrollY(),\n\t\t\tviewed = scrolled + getViewportH(),\n\t\t\telTop = getOffset(el).top,\n\t\t\telBottom = elTop + elH,\n\t\t\t// if 0, the element is considered in the viewport as soon as it enters.\n\t\t\t// if 1, the element is considered in the viewport only when it's fully inside\n\t\t\t// value in percentage (1 >= h >= 0)\n\t\t\th = h || 0;\n \n\t\treturn (elTop + elH * h) <= viewed && (elBottom) >= scrolled;\n\t}\n\t\n\tfunction init() {\n\t\tvar svgs = Array.prototype.slice.call( document.querySelectorAll( 'svg' ) ),\n\t\t\tsvgArr = new Array(),\n\t\t\tdidScroll = false,\n\t\t\tresizeTimeout;\n\n\t\t// the svgs already shown...\n\t\tsvgs.forEach( function( el, i ) {\n\t\t\tvar svg = new SVGEl( el );\n\t\t\tsvgArr[i] = svg;\n\t\t\tsetTimeout(function( el ) {\n\t\t\t\treturn function() {\n\t\t\t\t\tif( inViewport( el.parentNode ) ) {\n\t\t\t\t\t\tsvg.render();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}( el ), 250 ); \n\t\t} );\n\n\t\tvar scrollHandler = function() {\n\t\t\t\tif( !didScroll ) {\n\t\t\t\t\tdidScroll = true;\n\t\t\t\t\tsetTimeout( function() { scrollPage(); }, 60 );\n\t\t\t\t}\n\t\t\t},\n\t\t\tscrollPage = function() {\n\t\t\t\tsvgs.forEach( function( el, i ) {\n\t\t\t\t\tif( inViewport( el.parentNode, 0.5 ) ) {\n\t\t\t\t\t\tsvgArr[i].render();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdidScroll = false;\n\t\t\t},\n\t\t\tresizeHandler = function() {\n\t\t\t\tfunction delayed() {\n\t\t\t\t\tscrollPage();\n\t\t\t\t\tresizeTimeout = null;\n\t\t\t\t}\n\t\t\t\tif ( resizeTimeout ) {\n\t\t\t\t\tclearTimeout( resizeTimeout );\n\t\t\t\t}\n\t\t\t\tresizeTimeout = setTimeout( delayed, 200 );\n\t\t\t};\n\n\t\twindow.addEventListener( 'scroll', scrollHandler, false );\n\t\twindow.addEventListener( 'resize', resizeHandler, false );\n\t}\n\n\tinit();\n\n})();"],"sourceRoot":"/source/"}